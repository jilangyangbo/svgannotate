{"version":3,"sources":["components/Annotation/index.module.scss","logo.svg","App.js","components/Annotation/utils.js","components/Annotation/svgContent.js","components/Annotation/index.js","pages/mark/index.js","router/index.js","reportWebVitals.js","index.js"],"names":["module","exports","App","getTxtWidth","text","fontSize","parseInt","test","getRealWith","content","font","isLeft","dom","document","createElement","style","display","visibility","textContent","body","appendChild","width","clientWidth","removeChild","getNewEndIndex","startIndex","endIndex","enList","newEndIndex","remainList","forEach","item","push","getSpan","rowMaxWidth","list","labelFontSize","remain","substr","span","i","totalWith","length","txtWidth","tempEndIndex","filter","newSpan","substring","labelList","entRow","leftContent","leftX","rigthX","labelWith","labelText","labelLeftX","labelRightX","minX","Math","min","maxX","max","floor","flag","some","label","SvgContentIndex","onSelectEn","onRemoveLabel","onDeleteRelation","connections","onAddRelation","useState","showContent","setShowContent","pathGroup","setPathGroup","relationTextGroup","setRelationTextGroup","relationPathGroup","setRelationPathGroup","hoverRelationId","setHoverRelationId","selectLabel","setSelectLabel","addRealtionPath","setAddRealtionPath","addRelationVisible","setAddRelationVisible","toLabel","setToLabel","optionList","setOptionList","svgRef","useRef","childRef","divRef","selectLabelRef","selectRelation","setSelectRelation","useEffect","current","hoverRelationIdRef","onCancelAddRelation","onmousemove","oncontextmenu","onClickLabel","useCallback","e","fromLabel","id","mouseX","pageX","clientX","mouseY","pageY","clientY","options","option","fromLabelId","labelId","toLabelId","console","log","startX","offsetX","cx1","cx2","cy","topY","offsetY","path","d","stroke","fill","strokeWidth","markerEnd","preventDefault","render","newContent","fontSizeStr","window","getComputedStyle","getBoundingClientRect","lineHeight","labelHeight","relationFontSize","rowNum","rowContentList","allEnlist","tmpList","map","o","concat","allRelationList","row","rowRelationList","relationList","relation","re","matchEn","fromEntity","en","toEntity","rightX","fromPoint","x","c","toPoint","totalEntRow","enPathList","relationTextList","relationPathList","dy","rectHeight","RectY","labelMaxY","labelTopY","labelPath","transform","rx","height","labelColor","dx","userSelect","cursor","onContextMenu","onClick","genLabel","leftTextX","relationText","y","relationtext","onMouseEnter","onMouseOut","onClickRelation","relationPath","className","hover","setAttribute","svgContent","ref","markerWidth","markerHeight","refX","refY","orient","onMouseUp","getSelection","toString","range","getRangeAt","preSelectionRange","cloneRange","selectNodeContents","setEnd","startContainer","startOffset","start","end","annotateData","replace","visible","onCancel","title","footer","destroyOnClose","fontWeight","color","Group","onChange","target","data","connectionId","value","Content","labels","entities","relations","onAddEntity","onDeleteEntity","labelOptionVisible","setLabelOptionVisible","popPosition","setPopPosition","setList","setAnnotateData","newList","v","preValue","popMask","labelPopContent","stopPropagation","left","top","anData","enData","removeAllRanges","onSelectLabel","enId","reId","newEntities","newRelations","Index","setEntities","setRelations","textAlign","margin","Annotation","newData","Object","assign","newReList","index","findIndex","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.310321ef.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"popMask\":\"Annotation_popMask__2OP7A\",\"labelPopContent\":\"Annotation_labelPopContent__1hPWf\",\"title\":\"Annotation_title__XRpA2\",\"content\":\"Annotation_content__3pLst\",\"labelAn\":\"Annotation_labelAn__2wRXV\",\"popover\":\"Annotation_popover__kt94V\",\"labelInfoPop\":\"Annotation_labelInfoPop__2hcV7\",\"text\":\"Annotation_text__1Ks8-\",\"label\":\"Annotation_label__eFoDx\",\"footer\":\"Annotation_footer__pLccE\",\"svgContent\":\"Annotation_svgContent__1p_zs\",\"relationPath\":\"Annotation_relationPath__2Ps9F\",\"hover\":\"Annotation_hover__1liJs\"};","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg'\nimport './App.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a className=\"App-link\" href=\"/mark\">\n          标注\n        </a>\n      </header>\n    </div>\n  )\n}\n\nexport default App\n","export function getTxtWidth(text, fontSize) {\r\n  fontSize = parseInt(fontSize)\r\n  const smallEnglishRegx = /^[a-z]+$/ // 小写\r\n  const bigEnglishRegx = /^[A-Z]+$/ // 大写\r\n  const numberRegx = /^[0-9]$/ // 数字\r\n  const chinaRegx = /[\\u4E00-\\u9FA5\\uF900-\\uFA2D]/ // 中文\r\n  const halfRegx = /[`~@#$%^&*_+<>?{}/;']/\r\n  const quarRegx = /[\\\\\\/:,.!\"“”\\[\\]\\(\\)\\-]/\r\n\r\n  let unitWidth\r\n\r\n  if (chinaRegx.test(text)) {\r\n    unitWidth = fontSize\r\n  } else if (/\\s/.test(text) && '　' != text) {\r\n    unitWidth = fontSize / 4\r\n  } else if (smallEnglishRegx.test(text)) {\r\n    unitWidth = fontSize / 2\r\n  } else if (bigEnglishRegx.test(text)) {\r\n    unitWidth = fontSize / 2\r\n  } else if (halfRegx.test(text)) {\r\n    unitWidth = fontSize / 2\r\n  } else if (numberRegx.test(text)) {\r\n    unitWidth = fontSize / 1.8\r\n  } else if (quarRegx.test(text)) {\r\n    unitWidth = fontSize / 4\r\n  } else {\r\n    unitWidth = fontSize\r\n  }\r\n  return unitWidth\r\n}\r\n\r\nexport function getRealWith(content, font, isLeft) {\r\n  if (!content) {\r\n    return 0\r\n  }\r\n  const dom = document.createElement('span')\r\n  dom.style.display = 'inline-block'\r\n  dom.style.visibility = 'hidden'\r\n  dom.style.fontSize = `${font || 16}px`\r\n  // 添加一个中文字符避免开始字符如果是 \\r\\n 不显示空格导致计算偏差\r\n  dom.textContent = `${isLeft ? '' : '中'}${content}文`\r\n  document.body.appendChild(dom)\r\n  const width = dom.clientWidth - font * (isLeft ? 1 : 2)\r\n  document.body.removeChild(dom)\r\n  return width\r\n}\r\n\r\nconst getNewEndIndex = (startIndex, endIndex, enList) => {\r\n  let newEndIndex = endIndex\r\n  const remainList = []\r\n  enList.forEach((item) => {\r\n    if (item.endIndex > endIndex && item.startIndex > startIndex) {\r\n      // 获取换行的实体\r\n      if (item.startIndex < newEndIndex) {\r\n        newEndIndex = item.startIndex\r\n      }\r\n    } else {\r\n      remainList.push(item)\r\n    }\r\n  })\r\n\r\n  if (newEndIndex == endIndex) {\r\n    return { remainList, newEndIndex }\r\n  }\r\n  return getNewEndIndex(startIndex, newEndIndex, remainList)\r\n}\r\n\r\n// 获取每一行的文本和实体\r\nexport function getSpan({ endIndex, fontSize, rowMaxWidth, content, list }) {\r\n  const labelFontSize = fontSize - 2\r\n  const remain = content.substr(endIndex)\r\n  let span = ''\r\n  let i = 0\r\n  let totalWith = 0\r\n  // 获取没有实体时本行所显示的文字\r\n  while (i < remain.length && totalWith < rowMaxWidth) {\r\n    let txtWidth = getTxtWidth(remain[i], fontSize)\r\n    if (i != 0) {\r\n      if (\r\n        /\\s/.test(remain[i - 1]) &&\r\n        /\\s/.test(remain[i]) &&\r\n        '　' != remain[i]\r\n      ) {\r\n        txtWidth = 0\r\n        if (remain[i - 1] == '\\r' && remain[i] == '\\n' && /\\S/.test(span)) {\r\n          totalWith = rowMaxWidth\r\n        }\r\n      }\r\n    }\r\n    if (totalWith + txtWidth <= rowMaxWidth) {\r\n      totalWith += txtWidth\r\n      span += remain[i]\r\n      i++\r\n    } else {\r\n      totalWith = rowMaxWidth\r\n    }\r\n  }\r\n  const startIndex = endIndex\r\n  const tempEndIndex = startIndex + span.length\r\n  // 当前行的实体\r\n  const enList = list.filter((item) => {\r\n    return item.startIndex >= startIndex && item.startIndex <= tempEndIndex\r\n  })\r\n\r\n  const { remainList, newEndIndex } = getNewEndIndex(\r\n    startIndex,\r\n    tempEndIndex,\r\n    enList\r\n  )\r\n\r\n  const newSpan = span.substring(0, newEndIndex - startIndex)\r\n\r\n  const labelList = []\r\n  let entRow = 0\r\n  remainList.forEach((item) => {\r\n    const leftContent = remain.substring(0, item.startIndex - startIndex)\r\n    // 选中文字左边界 左边间隔一个字符宽度 防止顶部标签出左边界限\r\n    item.leftX = getRealWith(leftContent, fontSize, true) + fontSize\r\n    // 选中文字宽度\r\n    item.width = getRealWith(\r\n      content.substring(item.startIndex, item.endIndex),\r\n      fontSize\r\n    )\r\n    item.rigthX = item.leftX + item.width\r\n    item.labelWith = labelFontSize * item.labelText?.length + 4\r\n    item.labelLeftX = item.leftX + (item.width - item.labelWith) / 2\r\n    item.labelRightX = item.labelLeftX + item.labelWith\r\n    item.minX = Math.min(item.leftX, item.labelLeftX)\r\n    item.maxX = Math.max(item.rigthX, item.labelRightX)\r\n    item.floor = 1\r\n    let flag = true\r\n    while (flag) {\r\n      if (\r\n        labelList.some(\r\n          (label) =>\r\n            label.minX < item.maxX &&\r\n            label.maxX > item.minX &&\r\n            label.floor == item.floor\r\n        )\r\n      ) {\r\n        item.floor++\r\n      } else {\r\n        flag = false\r\n      }\r\n    }\r\n    entRow = Math.max(entRow, item.floor)\r\n    labelList.push(item)\r\n  })\r\n  return { span: newSpan, enList: remainList, entRow }\r\n}\r\nexport function getKeyValue(key, content) {\r\n  if (!content) {\r\n    return ''\r\n  }\r\n  const keyList = [\r\n    '入院情况',\r\n    '入院诊断',\r\n    '住院后的治疗及检查情况',\r\n    '出院诊断',\r\n    '出院情况及医嘱',\r\n    '出院嘱',\r\n    '医师签名',\r\n  ]\r\n  const keyObj = {\r\n    入院情况: ['入院情况'],\r\n    入院诊断: ['入院诊断'],\r\n    出院诊断: ['出院诊断'],\r\n    诊疗过程描述: ['诊疗过程描述', '住院后的治疗及检查情况'],\r\n    出院情况: ['出院情况', '出院情况及医嘱'],\r\n    出院医嘱: ['出院医嘱', '出院嘱'],\r\n  }\r\n  var result = content\r\n  let endIndex = content.length - 1\r\n  if (keyObj[key]) {\r\n    let res = RegExp('(' + keyObj[key].join('|') + ')[:：]').exec(content)\r\n    if (res) {\r\n      result = content.substring(res.index + res[0].length)\r\n    }else {\r\n      return''\r\n    }\r\n\r\n    let endRes = RegExp('(' + keyList.join('|') + ')[:：]').exec(result)\r\n    if (endRes) {\r\n      endIndex = endRes.index\r\n    }\r\n    // let hasKey = false\r\n    // for (let i = 0; i < keyObj[key].length; i++) {\r\n    //   let tempIndex = content.indexOf(keyObj[key][i] + '：')\r\n    //   if (tempIndex == -1) {\r\n    //     tempIndex = content.indexOf(keyObj[key][i] + ':')\r\n    //   }\r\n    //   if (tempIndex > -1) {\r\n    //     hasKey = true\r\n    //     tempIndex = tempIndex + keyObj[key][i].length + 1\r\n    //     result = content.substring(tempIndex)\r\n    //     break\r\n    //   }\r\n    // }\r\n    // if (!hasKey) {\r\n    //   return ''\r\n    // }\r\n    // for (let i = 0; i < keyList.length; i++) {\r\n    //   let tempIndex = result.indexOf(keyList[i] + '：')\r\n    //   if (tempIndex == -1) {\r\n    //     tempIndex = result.indexOf(keyList[i] + ':')\r\n    //   }\r\n    //   if (tempIndex > -1 && tempIndex < endIndex) {\r\n    //     endIndex = tempIndex\r\n    //   }\r\n    // }\r\n    result = result.substring(0, endIndex).trim()\r\n  }\r\n  return result\r\n}\r\n","/* eslint-disable no-loop-func */\r\nimport React, { useState, useEffect, useRef, useCallback } from 'react'\r\nimport { Modal, Radio } from 'antd'\r\nimport style from './index.module.scss'\r\nimport { getSpan, getKeyValue } from './utils'\r\n\r\nconst SvgContentIndex = ({\r\n  content,\r\n  onSelectEn,\r\n  list,\r\n  onRemoveLabel,\r\n  onDeleteRelation,\r\n  connections,\r\n  onAddRelation,\r\n}) => {\r\n  const [showContent, setShowContent] = useState([])\r\n  const [pathGroup, setPathGroup] = useState([])\r\n  const [relationTextGroup, setRelationTextGroup] = useState([])\r\n  const [relationPathGroup, setRelationPathGroup] = useState([])\r\n  const [hoverRelationId, setHoverRelationId] = useState(null)\r\n  const [selectLabel, setSelectLabel] = useState({})\r\n  const [addRealtionPath, setAddRealtionPath] = useState(null)\r\n  const [addRelationVisible, setAddRelationVisible] = useState(false)\r\n  const [toLabel, setToLabel] = useState({})\r\n  const [optionList, setOptionList] = useState([])\r\n  const svgRef = useRef()\r\n  const childRef = useRef()\r\n  const divRef = useRef()\r\n  const selectLabelRef = useRef(selectLabel)\r\n  const [selectRelation, setSelectRelation] = useState({})\r\n  useEffect(() => {\r\n    selectLabelRef.current = selectLabel\r\n  }, [selectLabel])\r\n\r\n  const hoverRelationIdRef = useRef(hoverRelationId)\r\n  useEffect(() => {\r\n    hoverRelationIdRef.current = hoverRelationId\r\n  }, [hoverRelationId])\r\n\r\n  const onCancelAddRelation = () => {\r\n    setAddRealtionPath()\r\n    svgRef.current.onmousemove = null\r\n    setSelectLabel({})\r\n    document.body.oncontextmenu = null\r\n    setToLabel({})\r\n    setSelectRelation({})\r\n    setAddRelationVisible(false)\r\n  }\r\n  const onClickLabel = useCallback((e, item) => {\r\n    let fromLabel = selectLabelRef.current\r\n    if (fromLabel && fromLabel.id) {\r\n      if (fromLabel.id == item.id) {\r\n        item.mouseX = e.pageX || e.clientX\r\n        item.mouseY = e.pageY || e.clientY\r\n        onSelectEn(item)\r\n        onCancelAddRelation()\r\n      } else {\r\n        setToLabel(item)\r\n        const options = connections.filter(\r\n          (option) =>\r\n            option.fromLabelId == fromLabel.labelId &&\r\n            option.toLabelId == item.labelId\r\n        )\r\n        setOptionList(options)\r\n        setAddRelationVisible(true)\r\n      }\r\n    } else {\r\n      console.log('else==selectLabel=', selectLabelRef.current)\r\n      setSelectLabel(item)\r\n      setAddRealtionPath(null)\r\n      svgRef.current.onmousemove = (e) => {\r\n        let startX = item.labelLeftX\r\n        if (e.offsetX < item.labelLeftX + item.labelWith / 2) {\r\n          startX = item.labelRightX\r\n        }\r\n        const cx1 = startX + (e.offsetX - startX) / 4\r\n        const cx2 = e.offsetX - (e.offsetX - startX) / 4\r\n        const cy = Math.min(item.topY, e.offsetY) - 20\r\n        const path = (\r\n          <path\r\n            d={`M${startX} ${item.topY}  C${cx1},${cy} ${cx2},${cy}  ${e.offsetX}, ${e.offsetY} `}\r\n            stroke=\"black\"\r\n            fill=\"none\"\r\n            strokeWidth=\"1\"\r\n            style={{ markerEnd: ` url('#markerArrow')` }}\r\n          />\r\n        )\r\n        setAddRealtionPath(path)\r\n      }\r\n      document.body.oncontextmenu = (e) => {\r\n        e.preventDefault()\r\n        onCancelAddRelation()\r\n      }\r\n    }\r\n  }, [])\r\n  const onSelectRelation = (e) => {\r\n    const relation = e.target.data\r\n    const data = {\r\n      fromEntity: selectLabel.id,\r\n      toEntity: toLabel.id,\r\n      connectionId: relation.id,\r\n      relationText: relation.text,\r\n    }\r\n    if (selectRelation.id) {\r\n      data.id = selectRelation.id\r\n    }\r\n    onAddRelation(data)\r\n    onCancelAddRelation()\r\n  }\r\n  const onClickRelation = (item) => {\r\n    setSelectRelation(item)\r\n    setSelectLabel(item.fromLabel)\r\n    setToLabel(item.toLabel)\r\n    const options = connections.filter(\r\n      (option) =>\r\n        option.fromLabelId == item.fromLabel.labelId &&\r\n        option.toLabelId == item.toLabel.labelId\r\n    )\r\n    setOptionList(options)\r\n    setAddRelationVisible(true)\r\n  }\r\n  const genLabel = (item, fontSize, totalEntRow, entRow, rowNum) => {\r\n    const labelFontSize = fontSize - 2 // 标签字体\r\n    const labelHeight = labelFontSize + 12 // 标签高度(文字加大括号)\r\n    const lineHeight = fontSize * 1.5 // 行高\r\n    const rectHeight = fontSize * 1.2 // 文字背景框高度\r\n    // 标签绝对Y坐标(背景框的Y坐标)\r\n    // 注:fontSize * 0.5 为 文字的行间距;理论上应该为0.4,但是测试发现text 默认下移0.1*fontsize\r\n    const RectY =\r\n      rowNum * lineHeight +\r\n      (totalEntRow + entRow) * labelHeight +\r\n      fontSize * 0.5\r\n    const labelMaxY = labelHeight * (item.floor - 1) * -1 // 标签相对底部Y坐标\r\n\r\n    const labelTopY = RectY - labelHeight * item.floor\r\n    item.topY = labelTopY\r\n    const labelPath = (\r\n      <g\r\n        key={item.id}\r\n        style={{\r\n          transform: `translate(${item.leftX}px, ${RectY}px)`,\r\n        }}\r\n      >\r\n        <rect\r\n          rx=\"3\"\r\n          height={rectHeight}\r\n          width={item.width}\r\n          style={{ fill: item.labelColor }}\r\n        />\r\n        <g\r\n          style={{\r\n            transform: `translate(${\r\n              (item.width - item.labelText?.length * labelFontSize - 4) / 2\r\n            }px,${-labelHeight * item.floor}px)`,\r\n          }}\r\n        >\r\n          <rect\r\n            fill={`${item.labelColor}E0`}\r\n            stroke=\"#436db2\"\r\n            width={item.labelWith}\r\n            height={fontSize}\r\n            rx=\"4\"\r\n          />\r\n          <text\r\n            dx=\"2\"\r\n            dy={`${labelFontSize}px`}\r\n            style={{\r\n              fontSize: `${labelFontSize}px`,\r\n              userSelect: 'none',\r\n              cursor: 'pointer',\r\n            }}\r\n            onContextMenu={(e) => {\r\n              e.preventDefault()\r\n              onRemoveLabel(item.id)\r\n            }}\r\n            onClick={(e) => {\r\n              onClickLabel(e, item)\r\n            }}\r\n          >\r\n            {item.labelText}\r\n          </text>\r\n        </g>\r\n        <path\r\n          d={`M0 ${labelMaxY}  Q-3 ${labelMaxY - 4} ${item.width / 4} ${\r\n            labelMaxY - 3\r\n          } T${item.width / 2} ${labelMaxY - 6} M${\r\n            item.width\r\n          } ${labelMaxY}   Q${item.width + 3} ${labelMaxY - 4} ${\r\n            (item.width / 4) * 3\r\n          } ${labelMaxY - 3} T${item.width / 2} ${labelMaxY - 6}`}\r\n          stroke=\"green\"\r\n          fill=\"none\"\r\n          strokeWidth=\"1\"\r\n        />\r\n      </g>\r\n    )\r\n\r\n    return { labelTopY, labelPath }\r\n  }\r\n\r\n  const render = () => {\r\n    console.log('==render=')\r\n    const newContent = []\r\n    const fontSizeStr = window.getComputedStyle(svgRef.current).fontSize\r\n    const fontSize = parseInt(fontSizeStr.substr(0, fontSizeStr.length - 2), 10)\r\n    const rowMaxWidth =\r\n      divRef.current.getBoundingClientRect().width - fontSize * 2\r\n    const lineHeight = fontSize * 1.5\r\n    const labelFontSize = fontSize - 2 // 标签字体\r\n    const labelHeight = labelFontSize + 12 // 标签高度(文字加大括号)\r\n    const relationFontSize = fontSize - 4\r\n\r\n    let endIndex = 0\r\n    let rowNum = 0\r\n    const rowContentList = []\r\n    let allEnlist = []\r\n    const tmpList = list.map((o) => ({ ...o }))\r\n    while (endIndex < content.length && rowNum < content.length) {\r\n      const { span, enList, entRow } = getSpan({\r\n        endIndex,\r\n        fontSize,\r\n        rowMaxWidth,\r\n        content,\r\n        list: tmpList,\r\n      })\r\n      rowContentList.push({ span, enList, entRow, rowNum })\r\n\r\n      allEnlist = allEnlist.concat(enList)\r\n      endIndex += span.length\r\n      rowNum++\r\n    }\r\n    // 计算所有的关系图\r\n    const allRelationList = []\r\n    rowContentList.forEach((row) => {\r\n      const rowRelationList = []\r\n      if (row.enList && row.enList.length > 0) {\r\n        row.enList.forEach((item) => {\r\n          if (item.relationList && item.relationList.length > 0) {\r\n            item.relationList.forEach((relation) => {\r\n              // 已经计算过的不在计算\r\n              if (allRelationList.some((re) => re.id == relation.id)) {\r\n                return\r\n              }\r\n              let matchEn = {}\r\n              if (relation.fromEntity == item.id) {\r\n                relation.fromLabel = item\r\n                matchEn = allEnlist.filter(\r\n                  (en) => en.id == relation.toEntity\r\n                )[0]\r\n                relation.toLabel = matchEn\r\n                if (matchEn.labelLeftX < item.labelLeftX) {\r\n                  relation.leftX = matchEn.labelLeftX\r\n                  relation.rightX = item.labelRightX\r\n                  relation.fromPoint = {\r\n                    x: relation.rightX,\r\n                    c: relation.rightX + relationFontSize,\r\n                  }\r\n                  relation.toPoint = {\r\n                    x: relation.leftX,\r\n                    c: relation.leftX - relationFontSize,\r\n                  }\r\n                } else {\r\n                  relation.leftX = item.labelLeftX\r\n                  relation.rightX = matchEn.labelRightX\r\n                  relation.fromPoint = {\r\n                    x: relation.leftX,\r\n                    c: relation.leftX - relationFontSize,\r\n                  }\r\n                  relation.toPoint = {\r\n                    x: relation.rightX,\r\n                    c: relation.rightX + relationFontSize,\r\n                  }\r\n                }\r\n              } else {\r\n                matchEn = allEnlist.filter(\r\n                  (en) => en.id == relation.fromEntity\r\n                )[0]\r\n                relation.fromLabel = matchEn\r\n                relation.toLabel = item\r\n                if (matchEn.labelLeftX < item.labelLeftX) {\r\n                  relation.leftX = matchEn.labelLeftX\r\n                  relation.rightX = item.labelRightX\r\n                  relation.fromPoint = {\r\n                    x: relation.leftX,\r\n                    c: relation.leftX - relationFontSize,\r\n                  }\r\n                  relation.toPoint = {\r\n                    x: relation.rightX,\r\n                    c: relation.rightX + relationFontSize,\r\n                  }\r\n                } else {\r\n                  relation.leftX = item.labelLeftX\r\n                  relation.rightX = matchEn.labelRightX\r\n                  relation.fromPoint = {\r\n                    x: relation.rightX,\r\n                    c: relation.rightX + relationFontSize,\r\n                  }\r\n                  relation.toPoint = {\r\n                    x: relation.leftX,\r\n                    c: relation.leftX - relationFontSize,\r\n                  }\r\n                }\r\n              }\r\n              relation.topY = 0\r\n              relation.floor = 1\r\n              let flag = true\r\n              while (flag) {\r\n                if (\r\n                  row.enList.some(\r\n                    (label) =>\r\n                      label.minX < relation.rightX &&\r\n                      label.maxX > relation.leftX &&\r\n                      label.floor == relation.floor\r\n                  ) ||\r\n                  rowRelationList.some(\r\n                    (label) =>\r\n                      label.leftX < relation.rightX &&\r\n                      label.rightX > relation.leftX &&\r\n                      label.floor == relation.floor\r\n                  )\r\n                ) {\r\n                  relation.floor++\r\n                } else {\r\n                  flag = false\r\n                }\r\n              }\r\n              if (relation.floor > row.entRow) {\r\n                row.entRow = relation.floor\r\n              }\r\n              rowRelationList.push(relation)\r\n              allRelationList.push(relation)\r\n            })\r\n          }\r\n        })\r\n      }\r\n      row.rowRelationList = rowRelationList\r\n    })\r\n\r\n    // 开始画图\r\n    let totalEntRow = 0 // 标签和关系的总行数\r\n    const enPathList = []\r\n    const relationTextList = []\r\n    const relationPathList = []\r\n    rowContentList.forEach((row) => {\r\n      // 加入文章内容\r\n      newContent.push(\r\n        <tspan\r\n          x={fontSize}\r\n          dy={fontSize * 1.5 + row.entRow * (fontSize + 10)}\r\n          key={row.rowNum}\r\n        >\r\n          {row.span}\r\n        </tspan>\r\n      )\r\n      // 加入实体标签\r\n      row.enList.forEach((item) => {\r\n        const { labelTopY, labelPath } = genLabel(\r\n          item,\r\n          fontSize,\r\n          totalEntRow,\r\n          row.entRow,\r\n          row.rowNum\r\n        )\r\n        enPathList.push(labelPath)\r\n        // 计算关系的起始标签的坐标\r\n        if (item.relationList && item.relationList.length > 0) {\r\n          item.relationList.forEach((relation) => {\r\n            // 计算标签关联的关系的位置\r\n            for (let i = 0; i < allRelationList.length; i++) {\r\n              if (allRelationList[i].id == relation.id) {\r\n                if (!allRelationList[i].topY) {\r\n                  const topY =\r\n                    row.rowNum * lineHeight +\r\n                    (totalEntRow + row.entRow) * labelHeight +\r\n                    fontSize * 0.5 -\r\n                    (relation.floor - 1) * labelHeight -\r\n                    relationFontSize\r\n                  allRelationList[i].topY = topY\r\n                  const leftTextX =\r\n                    (relation.rightX -\r\n                      relation.leftX -\r\n                      relationFontSize * relation.relationText.length) /\r\n                    2\r\n                  allRelationList[i].leftTextX = leftTextX\r\n                }\r\n                if (relation.fromEntity == item.id) {\r\n                  allRelationList[i].fromPoint.y = labelTopY\r\n                } else {\r\n                  allRelationList[i].toPoint.y = labelTopY\r\n                }\r\n                break\r\n              }\r\n            }\r\n          })\r\n        }\r\n      })\r\n\r\n      totalEntRow += row.entRow\r\n    })\r\n\r\n    // 绘制关系图\r\n    allRelationList.forEach((item) => {\r\n      const relationtext = (\r\n        <g\r\n          key={item.id}\r\n          style={{\r\n            transform: `translate(${item.leftX + item.leftTextX}px, ${\r\n              item.topY - relationFontSize / 2\r\n            }px)`,\r\n          }}\r\n        >\r\n          <rect\r\n            fill=\"#fff\"\r\n            width={item.relationText.length * relationFontSize}\r\n            height={relationFontSize}\r\n          />\r\n          <text\r\n            y={relationFontSize}\r\n            style={{\r\n              fontSize: `${relationFontSize}px`,\r\n              userSelect: 'none',\r\n              cursor: 'pointer',\r\n            }}\r\n            onContextMenu={(e) => {\r\n              e.preventDefault()\r\n              onDeleteRelation(item.id)\r\n            }}\r\n            onMouseEnter={() => {\r\n              setHoverRelationId(item.id)\r\n            }}\r\n            onMouseOut={() => {\r\n              setHoverRelationId('')\r\n            }}\r\n            onClick={(e) => {\r\n              onClickRelation(item)\r\n            }}\r\n          >\r\n            {item.relationText}\r\n          </text>\r\n        </g>\r\n      )\r\n\r\n      relationTextList.push(relationtext)\r\n\r\n      const relationPath = (\r\n        <g key={item.id}>\r\n          <path\r\n            className={` ${style.relationPath} ${\r\n              hoverRelationIdRef.current == item.id ? style.hover : ''\r\n            }`}\r\n            d={`M${item.fromPoint.x} ${item.fromPoint.y}\r\n           C ${item.fromPoint.c} ${item.topY},${item.fromPoint.c} ${item.topY} , ${item.fromPoint.x} ${item.topY} \r\n           L ${item.toPoint.x} ${item.topY} \r\n           C ${item.toPoint.c} ${item.topY} ,${item.toPoint.c} ${item.topY} , ${item.toPoint.x} ${item.toPoint.y}`}\r\n            stroke=\"black\"\r\n            fill=\"none\"\r\n            strokeWidth=\"1\"\r\n            style={{ markerEnd: ` url('#markerArrow')` }}\r\n          />\r\n        </g>\r\n      )\r\n      relationPathList.push(relationPath)\r\n    })\r\n    setRelationTextGroup(relationTextList)\r\n    setRelationPathGroup(relationPathList)\r\n    setPathGroup(enPathList)\r\n    setShowContent(newContent)\r\n    svgRef.current.setAttribute(\r\n      'height',\r\n      (rowNum + 1) * (fontSize * 1.5) + totalEntRow * (fontSize + 10)\r\n    )\r\n  }\r\n\r\n  useEffect(() => {\r\n    render()\r\n  }, [content, list, hoverRelationId])\r\n\r\n  // useEffect(() => {\r\n  //   console.table([\r\n  //     { key: '入院情况', value: getKeyValue('入院情况', content) },\r\n  //     { key: '入院诊断', value: getKeyValue('入院诊断', content) },\r\n  //     { key: '出院诊断', value: getKeyValue('出院诊断', content) },\r\n  //     { key: '诊疗过程描述', value: getKeyValue('诊疗过程描述', content) },\r\n  //     { key: '出院情况', value: getKeyValue('出院情况', content) },\r\n  //     { key: '出院医嘱', value: getKeyValue('出院医嘱', content) },\r\n  //   ])\r\n  // }, [content])\r\n  const onMouseUp = (e) => {\r\n    const mouseX = e.pageX || e.clientX // + document.documentElement.scrollLeft || 0 + document.body.scroolLeft || 0 // e.pageX ||\r\n    const mouseY = e.pageY || e.clientY // + document.documentElement.scrollTop || 0 + document.body.scrollTop || 0 // e.pageY// ||\r\n    const text = window.getSelection().toString()\r\n    if (text) {\r\n      // 计算相对于整个文档的定位\r\n      const range = window.getSelection().getRangeAt(0)\r\n      const preSelectionRange = range.cloneRange()\r\n      preSelectionRange.selectNodeContents(childRef.current)\r\n      preSelectionRange.setEnd(range.startContainer, range.startOffset)\r\n      const start = [...preSelectionRange.toString()].length\r\n      const end = start + [...range.toString()].length\r\n\r\n      const annotateData = {\r\n        startIndex: start, // 起始索引\r\n        endIndex: end, // 结束索引\r\n        text, // 标注文本内容\r\n        mouseX,\r\n        mouseY,\r\n      }\r\n      console.log('annotateData===', annotateData)\r\n      if (\r\n        (start == 0 &&\r\n          text.replace(/\\s+/g, ' ') !=\r\n            content.substr(0, end).replace(/\\s+/g, ' ')) ||\r\n        end > content.length\r\n      ) {\r\n        return\r\n      }\r\n      onSelectEn(annotateData)\r\n    }\r\n  }\r\n  return (\r\n    <div className={style.svgContent} ref={divRef}>\r\n      <svg width=\"100%\" ref={svgRef}>\r\n        <marker\r\n          id=\"markerArrow\"\r\n          markerWidth=\"8\"\r\n          markerHeight=\"10\"\r\n          refX=\"5\"\r\n          refY=\"6\"\r\n          orient=\"auto\"\r\n        >\r\n          <path d=\"M0,4 L0,8 L6,6 L0,4 L0,8\" />\r\n        </marker>\r\n        {selectLabel && addRealtionPath}\r\n        {pathGroup}\r\n        {relationPathGroup}\r\n        {relationTextGroup}\r\n        <text\r\n          ref={childRef}\r\n          onMouseUp={(e) => {\r\n            onMouseUp(e, childRef)\r\n            // setselectLabel({})\r\n          }}\r\n        >\r\n          {showContent}\r\n        </text>\r\n      </svg>\r\n      <Modal\r\n        visible={addRelationVisible}\r\n        onCancel={onCancelAddRelation}\r\n        title=\"添加关系\"\r\n        footer={false}\r\n        destroyOnClose\r\n      >\r\n        <div>\r\n          <div className={style.content}>\r\n            <div>\r\n              <span style={{ fontWeight: 'bold' }}>From: </span>\r\n              <span style={{ color: selectLabel.labelColor }}>\r\n                {selectLabel.labelText}\r\n              </span>\r\n              :{selectLabel.text}\r\n            </div>\r\n            <div>\r\n              <span style={{ fontWeight: 'bold' }}> To: </span>\r\n              <span style={{ color: toLabel.labelColor }}>\r\n                {toLabel.labelText}\r\n              </span>\r\n              :{toLabel.text}\r\n            </div>\r\n            <div className={style.label}>选择关系:</div>\r\n            <Radio.Group\r\n              onChange={onSelectRelation}\r\n              value={selectRelation?.connectionId}\r\n            >\r\n              {optionList.map((option) => {\r\n                return (\r\n                  <Radio value={option.id} key={option.id} data={option}>\r\n                    {option.text}\r\n                  </Radio>\r\n                )\r\n              })}\r\n            </Radio.Group>\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\nexport default SvgContentIndex\r\n","import React, { useState, useEffect, useRef } from 'react'\r\nimport { Radio } from 'antd'\r\n// import ShowContent from './content'\r\nimport ShowContent from './svgContent'\r\nimport style from './index.module.scss'\r\nimport './index.module.scss'\r\n\r\nconst Content = ({\r\n  content,\r\n  labels,\r\n  connections,\r\n  entities,\r\n  relations,\r\n  onAddEntity,\r\n  onDeleteEntity,\r\n  onAddRelation,\r\n  onDeleteRelation,\r\n}) => {\r\n  const [labelOptionVisible, setLabelOptionVisible] = useState(false)\r\n  const [popPosition, setPopPosition] = useState({ x: 0, y: 0 })\r\n  const [list, setList] = useState([])\r\n  const childRef = useRef()\r\n  const [annotateData, setAnnotateData] = useState()\r\n  useEffect(() => {\r\n    console.log('=useEffect=entities=', entities)\r\n    console.log('=useEffect=relations=', relations)\r\n    const enList = entities.map((en) => {\r\n      const relationList = relations.filter(\r\n        (re) => re.fromEntity == en.id || re.toEntity == en.id\r\n      )\r\n      en.relationList = [...relationList]\r\n      const label = labels.filter((item) => item.id == en.labelId)[0]\r\n      en.labelColor = label.labelColor\r\n      en.labelId = label.id\r\n      en.labelText = label.text\r\n      return en\r\n    })\r\n    const newList = [...enList]\r\n    setList(newList)\r\n  }, [entities, relations])\r\n\r\n  const onSelectEn = (v) => {\r\n    const { mouseX, mouseY, ...data } = v\r\n    let x = mouseX\r\n    setAnnotateData(data)\r\n    if (x > document.body.clientWidth - 120) {\r\n      x -= 120\r\n    }\r\n    setPopPosition((preValue) => ({ ...preValue, x, y: mouseY - 120 }))\r\n    setLabelOptionVisible(true)\r\n  }\r\n\r\n  const onSelectLabel = (label, anData) => {\r\n    if (!annotateData && !anData) {\r\n      return\r\n    }\r\n    // 修改 删除之前的\r\n    if (annotateData.id) {\r\n      console.log('onSelectLabel annotateData.id===', annotateData.id)\r\n      onDeleteEntity(annotateData.id)\r\n    }\r\n    const enData = annotateData || anData\r\n    const data = {\r\n      ...enData,\r\n      labelId: label.id,\r\n    }\r\n    onAddEntity({ ...data })\r\n    setLabelOptionVisible(false)\r\n    window.getSelection().removeAllRanges()\r\n  }\r\n\r\n  const onClickMask = () => {\r\n    setAnnotateData(null)\r\n    setLabelOptionVisible(false)\r\n  }\r\n\r\n  return (\r\n    <div ref={childRef}>\r\n      <ShowContent\r\n        content={content}\r\n        list={list}\r\n        onRemoveLabel={onDeleteEntity}\r\n        onSelectEn={onSelectEn}\r\n        connections={connections}\r\n        onAddRelation={onAddRelation}\r\n        onDeleteRelation={onDeleteRelation}\r\n      />\r\n      {labelOptionVisible && (\r\n        <div className={style.popMask} onClick={onClickMask}>\r\n          <div\r\n            className={style.labelPopContent}\r\n            onClick={(e) => {\r\n              e.stopPropagation()\r\n            }}\r\n            style={{ left: popPosition.x, top: popPosition.y }}\r\n          >\r\n            <div className={style.title}>选择标签</div>\r\n            <div className={style.content}>\r\n              <Radio.Group\r\n                onChange={(e) => onSelectLabel(e.target.data)}\r\n                value={annotateData?.labelId}\r\n              >\r\n                {(labels || []).map((item) => {\r\n                  return (\r\n                    <Radio value={item.id} key={item.id} data={item}>\r\n                      <span>{`${item.text}`}</span>\r\n                    </Radio>\r\n                  )\r\n                })}\r\n              </Radio.Group>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Content\r\n","import React, { useState } from 'react'\r\nimport Annotation from '@/components/Annotation'\r\nlet enId = 1\r\nlet reId = 1\r\nlet newEntities = []\r\nlet newRelations = []\r\nexport default function Index() {\r\n  const [entities, setEntities] = useState([])\r\n  const [relations, setRelations] = useState([])\r\n  const labels = [\r\n    { id: 1, labelColor: '#FF0000', text: '疾病' },\r\n    { id: 2, labelColor: '#00FF00', text: '药品' },\r\n  ]\r\n  const connections = [\r\n    { id: 1, fromLabelId: 1, toLabelId: 1, text: '并发症' },\r\n    { id: 2, fromLabelId: 2, toLabelId: 2, text: '协同作用' },\r\n    { id: 3, fromLabelId: 2, toLabelId: 1, text: '过敏反应' },\r\n    { id: 4, fromLabelId: 1, toLabelId: 2, text: '治疗药物' },\r\n    { id: 5, fromLabelId: 1, toLabelId: 1, text: '症状' },\r\n    { id: 6, fromLabelId: 2, toLabelId: 2, text: '拮抗作用' },\r\n  ]\r\n  const onAddEntity = (data) => {\r\n    const newData = Object.assign({}, data)\r\n    newData.id = enId++\r\n    const newList = [...newEntities]\r\n    newList.push(newData)\r\n    newEntities = [...newList]\r\n    setEntities(newEntities)\r\n  }\r\n  const onDeleteEntity = (id) => {\r\n    const newList = newEntities.filter((item) => item.id != id)\r\n    const newReList = relations.filter((item) => item.fromEntity != id && item.toEntity != id)\r\n    setRelations([...newReList])\r\n    newEntities = newList\r\n    setEntities([...newList])\r\n  }\r\n  const onAddRelation = (data) => {\r\n    const newList = newRelations\r\n    if (data.id) {\r\n      const index = newRelations.findIndex((item) => item.id == data.id)\r\n      newRelations[index] = data\r\n    } else {\r\n      data.id = reId++\r\n      newList.push(data)\r\n      newRelations = newList\r\n    }\r\n    setRelations([...newList])\r\n  }\r\n  const onDeleteRelation = (id) => {\r\n    const newList = relations.filter((item) => item.id != id)\r\n    setRelations([...newList])\r\n  }\r\n  return (\r\n    <div>\r\n      <div style={{ fontSize: '30px', textAlign: 'center', margin: '10px' }}>病例描述</div>\r\n      <Annotation\r\n        content={`入院情况：以“左足拇趾外翻畸形术后2年，复发加重6月”为主诉入院。2年前，患者无明显诱因出现左足拇外翻畸形，后左足拇外翻畸形逐渐加重，患者于当地医院行手术治疗，伤口好转后出院。近6月来，患者左足拇外翻畸形复发明显加重，伴有行走时左足拇趾内侧、足底部疼痛，严重影响患者行走及日常生活，为求诊治来我院就诊，门诊检查后以\\\" 左足拇外翻畸形术后复发\\\"诊断收入我科。患者近来，神志清楚，精神、睡眠、饮食正常，大、小便无异常，无心慌、气短，无发热、盗汗及消瘦等症状。高血压病史2年，最高血压达150/90mmHg，长期口服苯磺酸氨氯地平片，现血压控制可。 左足拇趾见陈旧性手术瘢痕，左足第2趾锤状趾畸形，左足第2、3、4跖趾关节跖侧大小约3.0×3.0cm胼胝体，压痛阳性，皮温不高。左足第5趾内翻畸形。左足第2趾间关节活动受限，左足皮肤感觉正常，左足背动脉搏动良好，末梢血运正常。 X线片：左足第2、3趾骨外翻畸形，左足第5趾内翻畸形。 \\r\\n入院诊断：1.左足拇外翻畸形术后复发 2.左足跖痛症 3.高血压1级（高危险组）   \\r\\n住院后的治疗及检查情况：入院后完善相关检查，给予对症支持处理、积极术前检查。无明显手术禁忌症后于2019-09-04在神经阻滞麻醉下行左足拇外翻畸形术后复发截骨矫形术，手术顺利，术后予以预防感染，换药等支持对症治疗。复查术后X线示：矫形位置满意，内固定可靠。现患肢肿胀明显消退，切口对合良好，无红肿及渗出，未拆线，末梢感觉及血运良好。上级医师查房，详细告知出院后注意事项，准予患者出院。\\r\\n出院诊断：1.左足拇外翻畸形术后复发 2.左足跖痛症 3.高血压1级（高危险组）\\r\\n出院情况及医嘱：出院时患者一般情况良好，未诉特殊不适；生命体征平稳。现患肢肿胀明显消退，切口对合良好，无红肿及渗出，未拆线，末梢感觉及血运良好。\\r\\n出院嘱：1、继续换药，切口愈合后拆线，患肢不负重卧床功能锻炼；2、出院后每月门诊复查（星期四下午），根据复查情况决定下地负重时间。3、出院后3周门诊复查，门诊指导进一步功能锻炼。4、根据复查情况择期手术取出内固定物；5、不适随诊。\"`}\r\n        labels={labels}\r\n        connections={connections}\r\n        entities={entities}\r\n        relations={relations}\r\n        onAddEntity={onAddEntity}\r\n        onDeleteEntity={onDeleteEntity}\r\n        onAddRelation={onAddRelation}\r\n        onDeleteRelation={onDeleteRelation}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n","import { HashRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport Mark from '@/pages/mark'\r\nimport App from '@/App'\r\nfunction Index() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Mark />\r\n        </Route>\r\n        <Route path=\"/mark\">\r\n          <Mark />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\nexport default Index\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport Router from './router'\nimport reportWebVitals from './reportWebVitals'\nimport 'antd/dist/antd.css'\n\nReactDOM.render(\n  // <React.StrictMode></React.StrictMode>\n  <Router />,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}